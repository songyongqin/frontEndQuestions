前端性能优化？
1.前端性能优化主要是为了提高页面的加载速度，优化用户的访问体验。可以从这些方面来进行优化。
（1）通过文件合并，css雪碧图，使用base64等方式来减少HTTP请求数，避免过多的请求造成等待的情况。
（2）通过DNS缓存等机制来减少DNS的查询次数。
（3）通过设置缓存策略，对常用不变的资源进行缓存。
（4）使用延迟加载的方式，来减少页面首屏加载时需要请求的资源。延迟加载的资源当用户需要访问时，再去请求加载。
（5）通过用户行为，对某些资源使用预加载的方式，来提高用户需要访问资源时的响应速度。
2.服务器方面
（1）使用CDN服务，来提高用户对于资源请求时的响应速度。
（2）服务器端启用Gzip，Deflate等方式对于传输的资源进行压缩，减小文件的体积。
（3）尽可能减小cookie的大小，并且通过将静态资源分配到其他域名下，来避免对静态资源请求时携带不必要的cookie
3.css和javascript方面
(1)把样式表放在页面的head标签中，减少页面的首次渲染的时间。(即使因为css规则树的变动导致reflow,repaint，造成的影响已经降到最小了)
(2)避免使用@import标签（@import url()机制不同于link,link是在加载页面前把css加载完毕，而@import url()则是读取完文件后在加载，所以会出现一开始没有css样式，闪烁一下出现样式后的页面）
(3)尽量把js脚本放在页面底部或者使用defer或async属性，避免脚本的加载和执行阻塞页面的渲染。defer与async都是异步执行
defer: 执行script.js要在所有元素解析完成之后，即DOMContentLoaded事件触发之前完成。
async: 加载和渲染后续文档元素的过程将和script.js的加载与执行并行进行
(4)通过对javaScript和css的文件进行压缩，来减小文件的体积。